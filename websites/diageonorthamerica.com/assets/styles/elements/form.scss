// Both native and custom selects must have the same width/height.
.selectNative,
.selectCustom {
	position: relative;
	width: 22rem;
	height: 3rem;
}

// Make sure the custom select does not mess with the layout
.selectCustom {
	position: absolute;
	top: 0;
	left: 0;
	display: none;
}

// This media query detects devices where the primary
// input mechanism can hover over elements. (e.g. computers with a mouse)
@media (hover: hover) {
	// Since we are using a mouse, it's safe to show the custom select.
	.selectCustom {
		display: block;
	}

	// In a computer using keyboard? Then let's hide back the custom select
	// while the native one is focused:
	.selectNative:focus + .selectCustom {
		display: none;
	}
}

/* Add the focus states too, They matter, always! */
.selectNative:focus,
.selectCustom.isActive .selectCustom-trigger {
	//outline: none;
	//box-shadow: white 0 0 0 0.2rem, #fcf9ee 0 0 0 0.4rem;
}

.selectCustom.isActive .selectCustom-trigger {
	&::after {
		transition: all 0.2s ease-in-out;
		transform: rotate(-135deg);
	}
}

//
// Rest of the styles to create the custom select.
// Just make sure the native and the custom have a similar "box" (the trigger).
//

.select {
	position: relative;
}

.selectLabel {
	display: block;
	font-weight: bold;
	margin-bottom: 0.4rem;
}

.selectWrapper {
	position: relative;
}

.selectNative,
.selectCustom-trigger {
	font-size: 16px;
	background-color: #fff;
	border: 1px solid #6f6f6f;
}

.selectNative {
	-webkit-appearance: none;
	-moz-appearance: none;
	background-image: url("data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
	background-repeat: no-repeat;
	background-position-x: 100%;
	background-position-y: 0.8rem;
	padding: 0rem 0.8rem;
}

.selectCustom-trigger {
	position: relative;
	width: 100%;
	height: 100%;
	background-color: #fff;
	padding: 0.8rem 0.8rem;
	cursor: pointer;
}

.selectCustom-trigger::after {
	content: '';
	display: block;
	box-sizing: border-box;
	position: absolute;
	width: 10px;
	height: 10px;
	border-bottom: 2px solid;
	border-right: 2px solid;
	transform: rotate(45deg);
	top: 50%;
	margin-top: -5px;
	right: 0.8rem;
	transition: all 0.2s ease-in-out;
}

.selectCustom-options {
	position: absolute;
	top: calc(2.8rem + 0.8rem);
	left: 0;
	width: 100%;
	max-height: 300px;
	background-color: #fff;
	box-shadow: 0 0 4px #e9e1f8;
	z-index: 1;
	display: none;
	overflow: auto;
}

.selectCustom.isActive .selectCustom-options {
	display: block;
}

.selectCustom-option {
	position: relative;
	padding: 0.5rem 0.8rem;
	padding-left: 1rem;
	margin: 0 0.2rem;
}

.selectCustom-option.isHover,
.selectCustom-option:hover {
	background-color: #fcf9ee;
	color: #000;
	cursor: default;
	margin: 0 0.2rem;
}

.selectCustom-option:not(:last-of-type)::after {
	content: '';
	position: absolute;
	bottom: 0;
	left: 0;
	width: 100%;
}

.selectCustom-option.isActive::before {
	position: absolute;
}

// re-style 'clear search' icon on input type=search field
input[type='search']::-webkit-search-cancel-button {
	-webkit-appearance: none;
	height: 1em;
	width: 1em;
	background-image: url("data:image/svg+xml,%3Csvg width='17' height='17' viewBox='0 0 17 17' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M15.8743 15.8764L0.750016 0.75M15.8743 0.751376L0.749329 15.8764L15.8743 0.751376Z' stroke='%23202020' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A");
	background-repeat: no-repeat;
	background-position: 50% 75%;
}

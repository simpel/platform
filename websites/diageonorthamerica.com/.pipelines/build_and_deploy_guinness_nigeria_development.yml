trigger: none

resources:
  - repo: self

variables:
  - group: AWS service connections
  - name: tag
    value: '$(Build.BuildId)'
  - name: dockerfile
    value: 'Dockerfile'
  - name: envfile
    value: './project-config/deployments/.env.hznstaging.PR44039.local'

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: CmdLine@2
            displayName: Pass env file to build
            inputs:
              script: |
                cp -f $(envfile) ./.env.local
          - task: CmdLine@2
            displayName: Pass file deps to build
            inputs:
              script: |
                cp -f ./project-config/deployments/robots.PR44039.txt ./public/robots.txt
          - task: Docker@2
            displayName: Build docker image
            inputs:
              repository: 'diageo-guinness-nigeria-fe'
              command: 'build'
              Dockerfile: '$(dockerfile)'
              buildContext: '.'
          - task: ECRPushImage@1
            displayName: Push docker image to ECR
            inputs:
              awsCredentials: '$(AWSServiceConnectionNameDevelopment)'
              regionName: 'eu-west-2'
              imageSource: 'imagename'
              sourceImageName: 'diageo-guinness-nigeria-fe'
              sourceImageTag: '$(Build.BuildId)'
              repositoryName: 'diageo-guinness-nigeria-fe'
              pushTag: '$(Build.BuildId)'
          - task: ECRPushImage@1
            displayName: Push docker image to ECR with the latest tag
            inputs:
              awsCredentials: '$(AWSServiceConnectionNameDevelopment)'
              regionName: 'eu-west-2'
              imageSource: 'imagename'
              sourceImageName: 'diageo-guinness-nigeria-fe'
              sourceImageTag: '$(Build.BuildId)'
              repositoryName: 'diageo-guinness-nigeria-fe'
              pushTag: 'latest'

  - stage: Deploy_Development
    displayName: Deploy to development
    condition: succeeded()
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: Development
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AWSCLI@1
                  displayName: Deploy task to ECS cluster
                  inputs:
                    awsCredentials: '$(AWSServiceConnectionNameDevelopment)'
                    regionName: 'eu-west-2'
                    awsCommand: 'ecs'
                    awsSubCommand: 'update-service'
                    awsArguments: '--cluster diageo-frontend-dev-cluster --service diageo-guinness-nigeria-fe-dev-service --desired-count 1 --task-definition diageo-guinness-nigeria-fe-dev-td --force-new-deployment --region eu-west-2'
